import{m as d,C as r,h as p,d as y}from"./index.b9933fdc.js";function f(e){let t=new DOMParser().parseFromString(e,"text/html");return t.querySelectorAll('a[href*="://"]').forEach(n=>{n.setAttribute("target","_blank")}),t.documentElement.outerHTML}function h(e){if(e==null)return"0";if(typeof e=="string"){const a=e.replace(/[^\d.-]/g,"");e=parseFloat(a)||0}return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}window.Alpine=d;document.addEventListener("DOMContentLoaded",()=>{try{const e=document.querySelector(".score-value");if(e){const a=e.getAttribute("data-value")||e.textContent.trim();let t=0;if(a){const s=a.replace(/[^\d.-]/g,"");t=parseInt(s)}isNaN(t)||(e.setAttribute("data-original-score",t),e.setAttribute("data-value",t),e.textContent=h(t),setTimeout(()=>{e.classList.add("animate-in")},300),setTimeout(()=>{r.fetch("/api/v1/users/me").then(s=>s.json()).then(s=>{if(s.success&&s.data&&s.data.score!==void 0&&s.data.score!==parseInt(e.getAttribute("data-original-score"))){const n=s.data.score;e.textContent=h(n),e.setAttribute("data-original-score",n),e.setAttribute("data-value",n)}}).catch(s=>{console.error("Error fetching user data during initialization:",s)})},1e3))}}catch(e){console.error("Error initializing score display:",e)}});d.store("challenge",{data:{view:""}});d.directive("tooltip",(e,{expression:a},{evaluateLater:t,effect:s})=>{const n=t(a),o=document.createElement("div");o.className="absolute z-50 px-2 py-1 text-xs font-medium text-white bg-gray-900 rounded-md shadow-sm opacity-0 transition-opacity duration-200 pointer-events-none",o.style.top="-30px",o.style.left="50%",o.style.transform="translateX(-50%)";const i=document.createElement("div");i.className="absolute w-2 h-2 bg-gray-900 transform rotate-45",i.style.bottom="-4px",i.style.left="calc(50% - 4px)",e.style.position="relative",o.appendChild(i),e.appendChild(o);function l(){n(u=>{o.textContent=u,o.appendChild(i),o.classList.remove("opacity-0"),o.classList.add("opacity-100")})}function c(){o.classList.remove("opacity-100"),o.classList.add("opacity-0")}e.addEventListener("mouseenter",l),e.addEventListener("mouseleave",c),e.addEventListener("focus",l),e.addEventListener("blur",c)});d.data("Hint",()=>({id:null,html:null,async showHint(e){if(e.target.open){let t=(await r.pages.challenge.loadHint(this.id)).data;if(t.content)this.html=f(t.html);else if(await r.pages.challenge.displayUnlock(this.id)){let n=await r.pages.challenge.loadUnlock(this.id);if(n.success){let i=(await r.pages.challenge.loadHint(this.id)).data;this.html=f(i.html)}else e.target.open=!1,r._functions.challenge.displayUnlockError(n)}else e.target.open=!1}}}));d.data("Challenge",()=>({id:null,next_id:null,submission:"",activeTab:"challenge",solves:[],response:null,share_url:null,max_attempts:0,attempts:0,isSubmitting:!1,async init(){p()},closeModal(){document.getElementById("challenge-window").classList.add("hidden"),history.replaceState(null,null," ")},async showChallenge(){this.activeTab="challenge"},async showSolves(){this.solves=await r.pages.challenge.loadSolves(this.id),this.solves.forEach(e=>(e.date=y(e.date).format("MMMM Do, h:mm:ss A"),e)),this.activeTab="solves"},getNextId(){return d.store("challenge").data.next_id},async nextChallenge(){document.getElementById("challenge-window").classList.add("hidden"),setTimeout(()=>{this.$dispatch("load-challenge",this.getNextId())},100)},async getShareUrl(){let e={type:"solve",challenge_id:this.id};const s=(await(await r.fetch("/api/v1/shares",{method:"POST",body:JSON.stringify(e)})).json()).data.url;this.share_url=s},copyShareUrl(){navigator.clipboard.writeText(this.share_url);const e=this.$el.querySelector("button[x-tooltip]");if(e){const a=new MouseEvent("mouseenter");e.dispatchEvent(a),setTimeout(()=>{const t=new MouseEvent("mouseleave");e.dispatchEvent(t)},2e3)}},async submitChallenge(){this.isSubmitting=!0,this.response=await r.pages.challenge.submitChallenge(this.id,this.submission),await this.renderSubmissionResponse(),this.isSubmitting=!1},async renderSubmissionResponse(){this.response.data.status==="correct"&&(this.submission="",setTimeout(()=>{document.querySelectorAll(".confetti-container").forEach(t=>{t.classList.add("active"),setTimeout(()=>{t.classList.remove("active")},3e3)})},200)),this.max_attempts>0&&this.response.data.status!="already_solved"&&(this.attempts+=1);const e=document.getElementById("challenge-input");e&&(this.response.data.status==="correct"?(e.classList.add("correct"),setTimeout(()=>e.classList.remove("incorrect"),100)):this.response.data.status==="incorrect"&&(e.classList.add("incorrect"),e.classList.add("shake-animation"),setTimeout(()=>e.classList.remove("shake-animation"),500))),this.$dispatch("load-challenges"),this.response.data.status==="correct"&&setTimeout(()=>{try{const a=document.querySelector('[x-data="ChallengeBoard"]');if(a&&a.__x&&a.__x.$data){const t=a.__x.$data,s=this.response.data.value,n=this.response.data.challenge||this.id;if(console.log("Challenge solved:",{id:n,value:s,status:this.response.data.status}),typeof t.updateScoreDisplay=="function")if(s!=null&&!isNaN(parseInt(s)))t.updateScoreDisplay(parseInt(s));else{const o=t.challenges.find(i=>i.id===n);o&&o.value!==void 0&&!isNaN(parseInt(o.value))?t.updateScoreDisplay(parseInt(o.value)):t.updateScoreDisplay(0,!0)}}else{const t=document.querySelector(".score-value");t&&r.fetch("/api/v1/users/me").then(s=>s.json()).then(s=>{if(s.success&&s.data){const n=s.data.score||0;t.textContent=h(n),t.setAttribute("data-original-score",n),t.setAttribute("data-value",n)}})}}catch(a){console.error("Error updating score after challenge solve:",a)}},300)}}));d.data("ChallengeBoard",()=>({loaded:!1,challenges:[],challenge:null,currentFilter:"all",recentChallenges:new Set,async init(){if(this.challenges=await r.pages.challenges.getChallenges(),this.loaded=!0,this.updateScoreDisplay(),this.challenges.forEach(e=>{this.isNewChallenge(e.id)&&this.recentChallenges.add(e.id)}),window.location.hash){let e=decodeURIComponent(window.location.hash.substring(1)),a=e.lastIndexOf("-");if(a>=0){let s=[e.slice(0,a),e.slice(a+1)][1];await this.loadChallenge(s)}}},isNewChallenge(e){return this.challenges.find(t=>t.id===Number(e))?e%3===0:!1},getChallengeIcon(e){return{Web:"fas fa-globe",Crypto:"fas fa-key",Forensics:"fas fa-search",Binary:"fas fa-microchip",Pwn:"fas fa-bug",Reverse:"fas fa-undo",Misc:"fas fa-puzzle-piece"}[e]||"fas fa-shield-alt"},getDifficultyRating(e){return e<150?1:e<250?2:e<350?3:e<450?4:5},getCategories(){const e=[];this.challenges.forEach(a=>{const{category:t}=a;e.includes(t)||e.push(t)});try{const a=r.config.themeSettings.challenge_category_order;if(a){const t=new Function(`return (${a})`);e.sort(t())}}catch(a){console.log("Error running challenge_category_order function"),console.log(a)}return e},getChallenges(e){let a=this.challenges;e!==null&&(a=this.challenges.filter(t=>t.category===e));try{const t=r.config.themeSettings.challenge_order;if(t){const s=new Function(`return (${t})`);a.sort(s())}}catch(t){console.log("Error running challenge_order function"),console.log(t)}return a},async loadChallenges(){this.challenges=await r.pages.challenges.getChallenges(),this.updateScoreDisplay()},updateScoreDisplay(e=0,a=!1){const t=document.querySelector(".score-value");if(!!t){if(e>0&&!a){const n=parseInt(t.getAttribute("data-original-score")||"0")+e;t.textContent=h(n),t.setAttribute("data-original-score",n),t.setAttribute("data-value",n),t.classList.remove("animate-in"),t.offsetWidth,t.classList.add("animate-in");const o=document.querySelector(".progress-bar"),i=document.querySelector(".mt-2.text-xs.text-gray-400.flex.justify-between span:last-child");if(o&&i){const l=parseInt(i.textContent);if(!isNaN(l)&&l>0){const c=Math.min(n/l*100,100);o.style.width=`${c}%`}}return}r.fetch("/api/v1/users/me").then(s=>s.json()).then(s=>{if(s.success&&s.data){const n=s.data.score||0,o=parseInt(t.getAttribute("data-original-score")||"0");if(t.setAttribute("data-original-score",n),t.setAttribute("data-value",n),n!==o){t.textContent=h(n),t.classList.remove("animate-in"),t.offsetWidth,t.classList.add("animate-in");const i=document.querySelector(".progress-bar"),l=document.querySelector(".mt-2.text-xs.text-gray-400.flex.justify-between span:last-child");if(i&&l){const c=parseInt(l.textContent);if(!isNaN(c)&&c>0){const u=Math.min(n/c*100,100);i.style.width=`${u}%`}}}}else r.api.get_scoreboard_list().then(n=>{if(n.success){const o=n.data.find(i=>i.me);if(o){const i=o.score||0,l=parseInt(t.getAttribute("data-original-score")||"0");if(i!==l){t.setAttribute("data-original-score",i),t.setAttribute("data-value",i),t.textContent=h(i),t.classList.remove("animate-in"),t.offsetWidth,t.classList.add("animate-in");const c=document.querySelector(".progress-bar"),u=document.querySelector(".mt-2.text-xs.text-gray-400.flex.justify-between span:last-child");if(c&&u){const g=parseInt(u.textContent);if(!isNaN(g)&&g>0){const m=Math.min(i/g*100,100);c.style.width=`${m}%`}}}}}}).catch(n=>{console.error("Failed to fetch score data:",n)})}).catch(s=>{console.error("Error fetching user score data:",s)})}},async loadChallenge(e){await r.pages.challenge.displayChallenge(e,a=>{a.data.view=f(a.data.view),d.store("challenge").data=a.data,d.nextTick(()=>{document.getElementById("challenge-window").classList.remove("hidden"),history.replaceState(null,null,`#${a.data.name}-${e}`)})})}}));d.start();
